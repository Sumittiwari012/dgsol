<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Web Chat Interface</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <style>
    * {
      box-sizing: border-box;
    }

    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      background: #f0f2f5;
      height: 100vh;
      display: flex;
      flex-direction: column;
    }

    .chat-header {
      background-color: #4a69bd;
      color: white;
      padding: 20px 30px;
      font-size: 22px;
      font-weight: bold;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      position: sticky;
      top: 0;
      z-index: 10;
    }

    .chat-body {
      flex: 1;
      padding: 30px;
      overflow-y: auto;
      display: flex;
      flex-direction: column;
      gap: 20px;
      background: linear-gradient(to bottom right, #ffffff, #e8edff);
    }

    .message {
      max-width: 65%;
      padding: 14px 18px;
      font-size: 15px;
      border-radius: 18px;
      line-height: 1.5;
      transition: background 0.3s ease;
      animation: fadeIn 0.3s ease;
    }

    .sent {
      align-self: flex-end;
      background-color: #dff9fb;
      color: #0c2461;
      border-bottom-right-radius: 5px;
    }

    .received {
      align-self: flex-start;
      background-color: #f1f2f6;
      color: #2f3542;
      border-bottom-left-radius: 5px;
    }

    .chat-footer {
      padding: 20px 30px;
      background: #fff;
      border-top: 1px solid #ddd;
      display: flex;
      gap: 10px;
      align-items: center;
    }

    .chat-input {
      flex: 1;
      padding: 12px 16px;
      border-radius: 20px;
      border: 1px solid #ccc;
      font-size: 15px;
      outline: none;
      transition: border 0.2s;
    }

    .chat-input:focus {
      border-color: #4a69bd;
    }

    .send-btn {
      background-color: #4a69bd;
      color: #fff;
      border: none;
      border-radius: 50%;
      width: 44px;
      height: 44px;
      font-size: 18px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: background 0.3s ease;
    }

    .send-btn:hover {
      background-color: #3b55a1;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(5px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Scrollbar style */
    .chat-body::-webkit-scrollbar {
      width: 6px;
    }

    .chat-body::-webkit-scrollbar-thumb {
      background-color: #bbb;
      border-radius: 10px;
    }

    @media (max-width: 600px) {
      .chat-header {
        font-size: 18px;
        padding: 16px;
      }

      .chat-footer {
        padding: 16px;
      }
    }
  </style>
</head>
<body>

  <div class="chat-header">
    Support Chat System
  </div>

  <div class="chat-body" id="chatMessages">
    <!-- Messages will be added here -->
  </div>

  <div class="chat-footer">
    <input type="text" id="chatInput" class="chat-input" placeholder="Type your message..." />
    <button class="send-btn" onclick="sendMessage()">&#10148;</button>
  </div>
<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();
  const username = "<%- username %>";  // ✅ Fix applied

  console.log("Connected as:", username); // ✅ Debug

  const input = document.getElementById('chatInput');
  const chatBox = document.getElementById('chatMessages');

  function sendMessage() {
    const msg = input.value.trim();
    if (!msg) return;

    socket.emit('send_message', { sender: username, text: msg });

    const div = document.createElement('div');
    div.className = 'message sent';
    div.textContent = msg;
    chatBox.appendChild(div);
    chatBox.scrollTop = chatBox.scrollHeight;
    input.value = '';
  }

  socket.on('receive_message', (data) => {
  // Don't re-add the sender's own message (already shown)
  if (data.sender !== username) {
    const div = document.createElement('div');
    div.className = 'message received';
    div.textContent = `${data.sender}: ${data.text}`;  // ✅ Fix here
    chatBox.appendChild(div);
    chatBox.scrollTop = chatBox.scrollHeight;
  }
});

  input.addEventListener('keydown', (e) => {
    if (e.key === 'Enter') sendMessage();
  });
</script>

</body>
</html>
